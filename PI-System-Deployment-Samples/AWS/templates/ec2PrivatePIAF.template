{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Backend PI AF Server EC2 instance(s). Optional HA deployment, i.e. 2x EC2.",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Global Configuration"
                    },
                    "Parameters": [
						"DeployHA",
                        "NamePrefix",
						"KeyPairName"
                    ]
                },
                {
                    "Label": {
                        "default": "PI AF Configuration"
                    },
                    "Parameters": [
                        "InstanceType",
						"LatestWindowsAmiId",
						"PIAF0NetBIOSName",
						"PIAF1NetBIOSName",
						"AFLoadBalancedName",
						"PIAFElasticLoadBalancerName",
						"SQLNode0NetBIOSName",
						"PIAFServiceAccountName"
                    ]
                },
               {
                    "Label": {
                        "default": "PI System Parameters"
                    },
                    "Parameters": [
                        "PIDataArchive0NetBIOSName"
                    ]
                },                
				{
                    "Label": {
                        "default": "Domain Parameters"
                    },
                    "Parameters": [
                        "DomainDNSName",
                        "DomainNetBIOSName",
						"DomainControllerServerName",
                        "DomainAdminUserName"
                    ]
                },
				{
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
						"VPCID",
						"BackendSubnet0ID",
						"BackendSubnet1ID"
                    ]
                },
				{
                    "Label": {
                        "default": "Security Groups"
                    },
                    "Parameters": [
						"DomainMemberSGID",
						"PISystemsSGID",
						"SQLClientSGID"
                    ]
                },

                {
                    "Label": {
                        "default": "AWS Deployment Sample Configuration"
                    },
                    "Parameters": [
                        "DSS3BucketName",
                        "DSS3KeyPrefix",
						"DSS3BucketRegion",
						"SetupKitsS3BucketName",
                        "SetupKitsS3KeyPrefix",
						"SetupKitsS3BucketRegion",
                        "SetupKitsS3PIFileName",
                        "SetupKitsS3PIProductID",
                        "SetupKitsS3VisionFileName"
                    ]
                }
            ],
            "ParameterLabels": {
                "DomainAdminUserName": {
                    "default": "Domain Admin User Name"
                },
                "DomainDNSName": {
                    "default": "Domain DNS Name"
                },
                "DomainNetBIOSName": {
                    "default": "Domain NetBIOS Name"
                },
				"DomainControllerServerName": {
                    "default": "Domain Controller Server Name"
                },
				"AFLoadBalancedName": {
					"default": "AF Load Balanced Name"
				},
                "KeyPairName": {
                    "default": "Key Pair Name"
                },
                "DSS3BucketName": {
                    "default": "Deployment Sample S3 Bucket Name"
                },
                "DSS3KeyPrefix": {
                    "default": "Deployment Sample S3 Key Prefix"
                },
                "DSS3BucketRegion": {
                    "default": "Region for Deployment Samples S3 Bucket. Used in S3 URL"
                },
                "DeployHA": {
                    "default": "Deploy HA"
                },
				"InstanceType": {
                    "default": "Instance Type for PI Asset Framework"
                },
				"NamePrefix": {
					"default": "Name Prefix"
				},
				"BackendSubnet0ID": {
					"default": "Backend Subnet0 ID"
				},
				"BackendSubnet1ID": {
					"default": "Backend Subnet1 ID"
				},
				"DomainMemberSGID": {
					"default": "Domain Member SGID"
				},
				"PISystemsSGID": {
					"default": "PI Systems SGID"
				},
				"SQLClientSGID": {
					"default": "SQL Client SGID"
				},
				"PIDataArchive0NetBIOSName": {
                    "default": "PI Data Archive 0 NetBIOS Name"
                },
				"PIAF0NetBIOSName": {
                    "default": "PI Asset Framework 0 NetBIOS Name"
                },
				"PIAF1NetBIOSName": {
                    "default": "PI Asset Framework 1 NetBIOS Name"
                },
				"PIAFElasticLoadBalancerName": {
                    "default": "PI Asset Framework Elastic Load Balancer Name"
                },
				"SQL0NetBIOSName": {
                    "default": "SQL 0 NetBIOS Name"
                },
				"PIAFServiceAccountName": {
                    "default": "PI AF Service Account Name"
                },
				"SetupKitsS3BucketName": {
                    "default": "Setup Kits S3 Bucket Name"
                },
                "SetupKitsS3KeyPrefix": {
                    "default": "Setup Kits S3 Root Folder Name"
                },
                "SetupKitsS3BucketRegion": {
                    "default": "Region for Setup Kits S3 Bucket. Used in S3 URL"
                },
				"SetupKitsS3PIFileName": {
                    "default": "PI Server Setup Kit File Name"
                },
                "SetupKitsS3PIProductID": {
                    "default": "PI Server Setup Kit Product ID"
                },
                "SetupKitsS3VisionFileName": {
                    "default": "PI Vision Setup Kit File Name"
                },
                "VPCID": {
					"default": "VPC ID"
				},
				"LatestWindowsAmiId": {
					"default": "Latest Windows Ami ID"
				}
            }
        }
    },
    "Parameters": {
        "InstanceType": {
            "Description": "EC2 instance type (aka sizing)",
            "Type": "String",
            "Default": "m5.xlarge",
            "AllowedValues": [
                "t2.medium",
                "t2.large",
				"t3.medium",
				"t3.large",
                "m4.large",
                "m4.xlarge",
                "m5.large",
                "m5.xlarge"
            ],
            "ConstraintDescription": "Must be a valid EC2 instance type."
        },
        "PIAF0NetBIOSName": {
            "AllowedPattern": "[a-zA-Z0-9\\-]+",
            "Default": "PIAF0",
            "Description": "NetBIOS name of the first PI AF server (up to 15 characters)",
            "MaxLength": "15",
            "MinLength": "1",
            "Type": "String"
        },
        "PIAF1NetBIOSName": {
            "AllowedPattern": "[a-zA-Z0-9\\-]+",
            "Default": "PIAF1",
            "Description": "NetBIOS name of the second PI AF server (up to 15 characters)",
            "MaxLength": "15",
            "MinLength": "1",
            "Type": "String"
        },
        "AFLoadBalancedName": {
            "AllowedPattern": "[a-zA-Z0-9\\-]+",
            "Default": "PIAF",
            "Description": "Name used to identify AF load balanced endpoint. This will be the AF Server name for HA deployments (up to 15 characters)",
            "MaxLength": "15",
            "MinLength": "1",
            "Type": "String"
        },
        "PIDataArchive0NetBIOSName": {
            "AllowedPattern": "[a-zA-Z0-9\\-]+",
            "Default": "PIDA0",
            "Description": "NetBIOS name of the first PI Data Archive server (up to 15 characters)",
            "MaxLength": "15",
            "MinLength": "1",
            "Type": "String"
        },
        "SQLNode0NetBIOSName": {
            "AllowedPattern": "[a-zA-Z0-9\\-]+",
            "Default": "SQL0",
            "Description": "NetBIOS name of the first SQL Node (up to 15 characters)",
            "MaxLength": "15",
            "MinLength": "1",
            "Type": "String"
        },
        "DeployHA": {
            "Type": "String",
            "Description": "Will deploy two EC2 instances for HA senarios.",
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "true"
        },
        "PIAFElasticLoadBalancerName": {
            "Type": "String",
            "Description": "Name for load balancer used by PIAF (must be unique per load balancer instance within the region).",
            "MaxLength": "32",
            "MinLength": "1"
        },
        "DSS3BucketRegion": {
            "Type": "String",
            "Description": "Region for Deployment Samples S3 Bucket. Used in S3 URL",
            "Default": "us-west-1"
        },
        "SetupKitsS3BucketRegion": {
            "Type": "String",
            "Description": "Region for Setup Kits S3 Bucket. Used in S3 URL",
            "Default": "us-west-1"
        },
        "DSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Deployment Sample bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Description": "S3 bucket name for the Deployment Sample assets. Bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "DSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-]+([0-9a-zA-Z-/]*[0-9a-zA-Z-])*$",
            "ConstraintDescription": "Deployment Sample key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash.",
            "Default": "DeploySample",
            "Description": "Name of the root folder in the S3 Deployment Samples bucket. Root folder name can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Type": "String"
        },
        "SetupKitsS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Setup Kits bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Description": "S3 bucket name for the Setup Kit assets. This contains the install media for the PI System. Bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "SetupKitsS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-]+([0-9a-zA-Z-/]*[0-9a-zA-Z-])*$",
            "ConstraintDescription": "Setup Kits key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash.",
            "Default": "osisetupkits",
            "Description": "Name of the root folder in the S3 Setup Kits bucket. Root folder name can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Type": "String"
        },
        "SetupKitsS3PIFileName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-\/_. ]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "PI Server Setup Kit File Name can include numbers, lowercase letters, uppercase letters, underscores (_), and hyphens (-). It cannot start or end with a hyphen (-).",
            "Description": "File Name for the PI Server Setup Kit. File name can include numbers, lowercase letters, uppercase letters, underscores (_), and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "SetupKitsS3PIProductID": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "PI Server Setup Kit Product ID can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Description": "Product ID for the PI Server Setup Kit. Product ID can include numbers, lowercase letters, uppercase letters,and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "SetupKitsS3VisionFileName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-\/_. ]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "PI Vision Setup Kit File Name can include numbers, lowercase letters, uppercase letters, underscores (_), and hyphens (-). It cannot start or end with a hyphen (-).",
            "Description": "File Name for the PI Vision Setup Kit. File Name can include numbers, lowercase letters, uppercase letters, underscores (_), and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "KeyPairName": {
            "Description": "Public/private key pairs allow you to securely connect to your instance after it launches",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "NamePrefix"       : {
            "Type" : "String",
            "AllowedPattern" : "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription" : "Prefix can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Description" : "Prefix used when naming resources, inputs, and outputs. Maximum 24 characters",
            "MaxLength" : "24"
        },
        "DomainDNSName": {
            "AllowedPattern": "[a-zA-Z0-9]+\\..+",
            "Default": "osideploysample.int",
            "Description": "Fully qualified domain name (FQDN) of the forest root domain e.g. example.com",
            "MaxLength": "25",
            "MinLength": "3",
            "Type": "String"
        },
        "DomainNetBIOSName": {
            "AllowedPattern": "[a-zA-Z0-9]+",
            "Default": "osideploysample",
            "Description": "NetBIOS name of the domain (up to 15 characters) for users of earlier versions of Windows e.g. EXAMPLE",
            "MaxLength": "15",
            "MinLength": "1",
            "Type": "String"
        },
        "DomainAdminUserName": {
            "Type": "String",
            "Description": "Username for the domain user with rights to create AD Groups.",
            "Default": "piadmin"
        },
        "PIAFServiceAccountName": {
            "Description": "AF Server service account name. Also the AWS SSM Parameter Store parameter name. Used to retrieve the account password.",
            "MinLength": "1",
            "Type": "String"
        },
        "DomainControllerServerName": {
            "Type": "String",
            "Description": "Host name of primary domain controller. Used when creating service account, security group, and updating DNS with load balance end point used by AF.",
            "Default": "DC0"
        },
        "DomainMemberSGID"           : {
            "Description" : "ID of the Domain Member Security Group (e.g., sg-7f16e910).",
            "Type"        : "AWS::EC2::SecurityGroup::Id"
        },
        "SQLClientSGID"              : {
            "Description" : "ID of the SQL Client Security Group (e.g., sg-7f16e910).",
            "Type"        : "AWS::EC2::SecurityGroup::Id"
        },
        "PISystemsSGID"              : {
            "Description" : "ID of the PI Systems Security Group (e.g., sg-7f16e910).",
            "Type"        : "AWS::EC2::SecurityGroup::Id"
        },
        "VPCID"                      : {
            "Description" : "ID of the VPC (e.g., vpc-0343606e)",
            "Type"        : "AWS::EC2::VPC::Id"
        },
        "BackendSubnet0ID"           : {
            "Description" : "ID of the backend subnet 1 in Availability Zone 1.",
            "Type"        : "AWS::EC2::Subnet::Id"
        },
        "BackendSubnet1ID"           : {
            "Description" : "ID of the backend subnet 2 in Availability Zone 2.",
            "Type"        : "AWS::EC2::Subnet::Id"
        },
        "LatestWindowsAmiId": {
            "Description": "ID for the latest Windows Server 2016 Data Center Amazon Managed Image (AMI). The ID will be looked up from Amazon's public Parameter Store. Provide the full path to the AMI you want to find.",
            "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
            "Default": "/aws/service/ami-windows-latest/Windows_Server-2016-English-Full-Base"
        }
    },
    "Conditions": {
        "CreateHAResources": {
            "Fn::Equals": [
                {
                    "Ref": "DeployHA"
                },
                true
            ]
        }
    },
    "Resources": {
        "EC2Role": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": [
                                        "s3:GetObject"
                                    ],
                                    "Resource": {
                                        "Fn::Sub": "arn:aws:s3:::${DSS3BucketName}/${DSS3KeyPrefix}/*"
                                    },
                                    "Effect": "Allow"
                                }
                            ]
                        },
                        "PolicyName": "aws-deploy-sample-s3-policy"
                    },
                    {
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": [
                                        "s3:GetObject"
                                    ],
                                    "Resource": {
                                        "Fn::Sub": "arn:aws:s3:::${SetupKitsS3BucketName}/${SetupKitsS3KeyPrefix}/*"
                                    },
                                    "Effect": "Allow"
                                }
                            ]
                        },
                        "PolicyName": "aws-setup-kits-s3-policy"
                    },
                    {
                        "PolicyName": "SSM-Parameters-DomainJoin",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ssm:GetParameter",
                                        "ssm:GetParameters"
                                    ],
                                    "Resource": {
                                        "Fn::Sub": "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${NamePrefix}/${DomainAdminUserName}"
                                    }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ssm:DescribeParameters"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "kms:Decrypt"
                                    ],
                                    "Resource": {
                                        "Fn::Sub": "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/ssm"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "SSM-Parameters-PIAssetFramework",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ssm:GetParameter",
                                        "ssm:GetParameters"
                                    ],
                                    "Resource": {
                                        "Fn::Sub": "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${NamePrefix}/${PIAFServiceAccountName}"
                                    }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ssm:DescribeParameters"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "kms:Decrypt"
                                    ],
                                    "Resource": {
                                        "Fn::Sub": "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/ssm"
                                    }
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "EC2RoleInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "EC2Role"
                    }
                ]
            }
        },
        "EC20": {
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "AWS::CloudFormation::Authentication": {
                    "S3AccessCreds": {
                        "type": "S3",
                        "roleName": {
                            "Ref": "EC2Role"
                        },
                        "buckets": [
                            {
                                "Ref": "DSS3BucketName"
                            }
                        ]
                    }
                },
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "config": [
                            "setup",
                            "rename",
                            "pisoftware",
                            "bootstrapDSC",
                            "finalize"
                        ]
                    },
                    "setup": {
                        "files": {
                            "c:\\cfn\\cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "\n",
                                            "region=",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.EC20.Metadata.AWS::CloudFormation::Init\n",
                                            "action=cfn-init.exe -v -c config -s ",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            " -r EC20",
                                            " --region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\scripts\\Unzip-Archive.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${DSS3BucketName}.s3.${DSS3BucketRegion}.amazonaws.com/${DSS3KeyPrefix}/scripts/Unzip-Archive.ps1"
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "c:\\cfn\\modules\\AWSQuickStart.zip": {
                                "source": {
                                    "Fn::Sub": "https://${DSS3BucketName}.s3.${DSS3BucketRegion}.amazonaws.com/${DSS3KeyPrefix}/modules/AWSQuickStart.zip"
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "c:\\cfn\\scripts\\CreateWaitHandle.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${DSS3BucketName}.s3.${DSS3BucketRegion}.amazonaws.com/${DSS3KeyPrefix}/scripts/CreateWaitHandle.ps1"
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "c:\\cfn\\scripts\\PIAF0.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${DSS3BucketName}.s3.${DSS3BucketRegion}.amazonaws.com/${DSS3KeyPrefix}/scripts/configs/PIAF0.ps1"
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "c:\\cfn\\scripts\\IPHelper.psm1": {
                                "source": {
                                    "Fn::Sub": "https://${DSS3BucketName}.s3.${DSS3BucketRegion}.amazonaws.com/${DSS3KeyPrefix}/scripts/IPHelper.psm1"
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "c:\\cfn\\scripts\\New-DSCCertificate.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${DSS3BucketName}.s3.${DSS3BucketRegion}.amazonaws.com/${DSS3KeyPrefix}/scripts/New-DSCCertificate.ps1"
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "c:\\cfn\\scripts\\Join-Domain.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${DSS3BucketName}.s3.${DSS3BucketRegion}.amazonaws.com/${DSS3KeyPrefix}/scripts/Join-Domain.ps1"
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "C:\\cfn\\Modules\\xStorage_3.4.zip": {
                                "source": {
                                    "Fn::Sub": "https://${DSS3BucketName}.s3.${DSS3BucketRegion}.amazonaws.com/${DSS3KeyPrefix}/modules/xStorage_3.4.zip"
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "C:\\cfn\\Modules\\xNetworking_5.7.zip": {
                                "source": {
                                    "Fn::Sub": "https://${DSS3BucketName}.s3.${DSS3BucketRegion}.amazonaws.com/${DSS3KeyPrefix}/modules/xNetworking_5.7.zip"
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "C:\\cfn\\Modules\\xPendingReboot_0.4.zip": {
                                "source": {
                                    "Fn::Sub": "https://${DSS3BucketName}.s3.${DSS3BucketRegion}.amazonaws.com/${DSS3KeyPrefix}/modules/xPendingReboot_0.4.zip"
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "C:\\cfn\\Modules\\xActiveDirectory_3.0.zip": {
                                "source": {
                                    "Fn::Sub": "https://${DSS3BucketName}.s3.${DSS3BucketRegion}.amazonaws.com/${DSS3KeyPrefix}/modules/xActiveDirectory_3.0.zip"
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "C:\\cfn\\Modules\\xDnsServer_1.15.zip": {
                                "source": {
                                    "Fn::Sub": "https://${DSS3BucketName}.s3.${DSS3BucketRegion}.amazonaws.com/${DSS3KeyPrefix}/modules/xDnsServer_1.15.zip"
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "C:\\cfn\\Modules\\SqlServerDsc_13.2.zip": {
                                "source": {
                                    "Fn::Sub": "https://${DSS3BucketName}.s3.${DSS3BucketRegion}.amazonaws.com/${DSS3KeyPrefix}/modules/SqlServerDsc_13.2.zip"
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "C:\\cfn\\Modules\\SqlServer_21.0.17279.zip": {
                                "source": {
                                    "Fn::Sub": "https://${DSS3BucketName}.s3.${DSS3BucketRegion}.amazonaws.com/${DSS3KeyPrefix}/modules/SqlServer_21.0.17279.zip"
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "C:\\cfn\\Modules\\xWindowsUpdate-2.8.zip": {
                                "source" : {
                                    "Fn::Sub": "https://${DSS3BucketName}.s3.${DSS3BucketRegion}.amazonaws.com/${DSS3KeyPrefix}/modules/xWindowsUpdate-2.8.zip"
                                },
                                "authentication": "S3AccessCreds"
                            }
                        },
                        "services": {
                            "windows": {
                                "cfn-hup": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": [
                                        "c:\\cfn\\cfn-hup.conf",
                                        "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        },
                        "commands": {
                            "a-set-execution-policy": {
                                "command": "powershell.exe -command Set-ExecutionPolicy RemoteSigned -Force",
                                "waitAfterCompletion": "0"
                            },
                            "b-unpack-quickstart-module": {
                                "command": "powershell.exe -command c:\\cfn\\scripts\\Unzip-Archive.ps1 -Source c:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\",
                                "waitAfterCompletion": "0"
                            },
                            "c-create-waithandle": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -command \"c:\\cfn\\scripts\\CreateWaitHandle.ps1 -Handle '",
                                            {
                                                "Ref": "PIAF0WaitHandle"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "d-unzip-modules": {
                                "command": "powershell.exe -command \"Get-ChildItem 'C:\\cfn\\Modules' *.zip | Foreach-Object { c:\\cfn\\scripts\\unzip-archive.ps1 -source $_.fullname -destination 'C:\\Program Files\\WindowsPowerShell\\Modules'}\"",
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "pisoftware": {
                        "files": {
                            "c:\\media\\PIAF\\UpdateAFServersUser.sql": {
                                "source": {
                                    "Fn::Sub": "https://${DSS3BucketName}.s3.${DSS3BucketRegion}.amazonaws.com/${DSS3KeyPrefix}/scripts/PIAF/UpdateAFServersUser.sql"
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "c:\\media\\PIServer\\PIServerInstaller.exe": {
                                "source": {
                                    "Fn::Sub": "https://${SetupKitsS3BucketName}.s3.${SetupKitsS3BucketRegion}.amazonaws.com/${SetupKitsS3KeyPrefix}/PIServer/${SetupKitsS3PIFileName}"
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "C:\\media\\NETFramework\\windows10.0-kb4486129.msu": {
                                "source" : "http://download.windowsupdate.com/c/msdownload/update/software/ftpk/2019/08/windows10.0-kb4486129-x64_bb869dd2cfa4ddde433373e2c72d15e660c2fc8d.msu"
                            }
                        }
                    },
                    "rename": {
                        "commands": {
                            "a-rename-computer": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command Rename-Computer -Restart -NewName '",
                                            {
                                                "Ref": "PIAF0NetBIOSName"
                                            },
                                            "'"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "b-domain-join": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -executionpolicy remotesigned -Command c:\\cfn\\scripts\\Join-Domain.ps1 -DomainName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -UserName '",
                                            {
                                                "Ref": "DomainAdminUserName"
                                            },
                                            "' -NamePrefix '",
                                            {
                                                "Ref" : "NamePrefix"
                                            },
                                            "'"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            }
                        }
                    },
                    "bootstrapDSC": {
                        "commands": {
                            "a-create-cert": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -command c:\\cfn\\scripts\\New-DSCCertificate.ps1"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-suppress-uac-for-db-import": {
                                "command": "REG ADD HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v ConsentPromptBehaviorAdmin /t REG_DWORD /d 0 /f",
                                "waitAfterCompletion": "300"
                            },
                            "c-run-dsc-config-first": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command c:\\cfn\\scripts\\PIAF0.ps1 -DomainNetBiosName '",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -DomainAdminUserName '",
                                            {
                                                "Ref": "DomainAdminUserName"
                                            },
                                            "' -SetupKitsS3PIProductID '",
                                            {
                                                "Ref": "SetupKitsS3PIProductID"
                                            },
                                            "' -PIAFServiceAccountName '",
                                            {
                                                "Ref": "PIAFServiceAccountName"
                                            },
                                            "' -DefaultPIDataArchive '",
                                            {
                                                "Ref": "PIDataArchive0NetBIOSName"
                                            },
                                            "' -AFLoadBalancedName '",
                                            {
                                                "Ref": "AFLoadBalancedName"
                                            },
                                            "' -DefaultSqlServer '",
                                            {
                                                "Ref": "SQLNode0NetBIOSName"
                                            },
                                            "' -PrimaryDomainController '",
                                            {
                                                "Ref": "DomainControllerServerName"
                                            },
                                            "' -ElasticLoadBalancerDnsRecord '",
                                            {
                                                "Fn::If": [
                                                    "CreateHAResources",
                                                    {
                                                        "Fn::GetAtt": [
                                                            "ELB0",
                                                            "DNSName"
                                                        ]
                                                    },
                                                    {
                                                        "Ref": "AWS::NoValue"
                                                    }
                                                ]
                                            },
                                            "' -NamePrefix '",
                                            {
                                                "Ref" : "NamePrefix"
                                            },
                                            "'"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "d-restore-uac-db-import": {
                                "command": "REG ADD HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v ConsentPromptBehaviorAdmin /t REG_DWORD /d 5 /f",
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "finalize": {
                        "commands": {
                            "a-write-status": {
                                "command": "powershell.exe -command Write-AWSQuickStartStatus",
                                "waitAfterCompletion": "0"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "IamInstanceProfile": {
                    "Ref": "EC2RoleInstanceProfile"
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "ImageId": {
                    "Ref": "LatestWindowsAmiId"
                },
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "<script>\n",
                                "cfn-init.exe -v -c config -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r EC20",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "</script>\n"
                            ]
                        ]
                    }
                },
                "NetworkInterfaces": [
                    {
                        "GroupSet"    : [
                            {
                                "Ref" : "DomainMemberSGID"
                            },
                            {
                                "Ref" : "PISystemsSGID"
                            },
                            {
                                "Ref" : "SQLClientSGID"
                            }
                        ],
                        "DeviceIndex": "0",
                        "DeleteOnTermination": "true",
                        "SubnetId"            : {
							"Ref" : "BackendSubnet0ID"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${NamePrefix}-${PIAF0NetBIOSName}"
                        }
                    }
                ]
            }
        },
        "EC20VA0Binaries": {
            "Type": "AWS::EC2::VolumeAttachment",
            "Properties": {
                "VolumeId": {
                    "Ref": "EC20VolumeData0Binaries"
                },
                "InstanceId": {
                    "Ref": "EC20"
                },
                "Device": "xvdf"
            }
        },
        "EC20VolumeData0Binaries": {
            "Type": "AWS::EC2::Volume",
            "Metadata": {
                "Comment": "Data disk to separate program binaries."
            },
            "Properties": {
                "AvailabilityZone": {
                    "Fn::GetAtt": [
                        "EC20",
                        "AvailabilityZone"
                    ]
                },
                "Size": 32,
                "VolumeType": "gp2",
                "Encrypted": true,
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${NamePrefix}-${PIAF0NetBIOSName}-binaries-ebs"
                        }
                    }
                ]
            }
        },
        "PIAF0WaitCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "DependsOn": "EC20",
            "Properties": {
                "Handle": {
                    "Ref": "PIAF0WaitHandle"
                },
                "Count": "2",
                "Timeout": "5400"
            }
        },
        "PIAF0WaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "EC21": {
            "Type": "AWS::EC2::Instance",
            "Condition": "CreateHAResources",
            "Metadata": {
                "AWS::CloudFormation::Authentication": {
                    "S3AccessCreds": {
                        "type": "S3",
                        "roleName": {
                            "Ref": "EC2Role"
                        },
                        "buckets": [
                            {
                                "Ref": "DSS3BucketName"
                            }
                        ]
                    }
                },
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "config": [
                            "setup",
                            "rename",
                            "pisoftware",
                            "addloadbalancerdns",
                            "bootstrapDSC",
                            "finalize"
                        ]
                    },
                    "setup": {
                        "files": {
                            "c:\\cfn\\cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "\n",
                                            "region=",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.EC21.Metadata.AWS::CloudFormation::Init\n",
                                            "action=cfn-init.exe -v -c config -s ",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            " -r EC21",
                                            " --region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\scripts\\Unzip-Archive.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${DSS3BucketName}.s3.${DSS3BucketRegion}.amazonaws.com/${DSS3KeyPrefix}/scripts/Unzip-Archive.ps1"
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "c:\\cfn\\modules\\AWSQuickStart.zip": {
                                "source": {
                                    "Fn::Sub": "https://${DSS3BucketName}.s3.${DSS3BucketRegion}.amazonaws.com/${DSS3KeyPrefix}/modules/AWSQuickStart.zip"
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "c:\\cfn\\scripts\\CreateWaitHandle.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${DSS3BucketName}.s3.${DSS3BucketRegion}.amazonaws.com/${DSS3KeyPrefix}/scripts/CreateWaitHandle.ps1"
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "c:\\cfn\\scripts\\PIAF0.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${DSS3BucketName}.s3.${DSS3BucketRegion}.amazonaws.com/${DSS3KeyPrefix}/scripts/configs/PIAF0.ps1"
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "c:\\cfn\\scripts\\IPHelper.psm1": {
                                "source": {
                                    "Fn::Sub": "https://${DSS3BucketName}.s3.${DSS3BucketRegion}.amazonaws.com/${DSS3KeyPrefix}/scripts/IPHelper.psm1"
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "c:\\cfn\\scripts\\New-DSCCertificate.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${DSS3BucketName}.s3.${DSS3BucketRegion}.amazonaws.com/${DSS3KeyPrefix}/scripts/New-DSCCertificate.ps1"
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "c:\\cfn\\scripts\\Join-Domain.ps1": {
                                "source": {
                                    "Fn::Sub": "https://${DSS3BucketName}.s3.${DSS3BucketRegion}.amazonaws.com/${DSS3KeyPrefix}/scripts/Join-Domain.ps1"
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "C:\\cfn\\Modules\\xStorage_3.4.zip": {
                                "source": {
                                    "Fn::Sub": "https://${DSS3BucketName}.s3.${DSS3BucketRegion}.amazonaws.com/${DSS3KeyPrefix}/modules/xStorage_3.4.zip"
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "C:\\cfn\\Modules\\xNetworking_5.7.zip": {
                                "source": {
                                    "Fn::Sub": "https://${DSS3BucketName}.s3.${DSS3BucketRegion}.amazonaws.com/${DSS3KeyPrefix}/modules/xNetworking_5.7.zip"
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "C:\\cfn\\Modules\\xPendingReboot_0.4.zip": {
                                "source": {
                                    "Fn::Sub": "https://${DSS3BucketName}.s3.${DSS3BucketRegion}.amazonaws.com/${DSS3KeyPrefix}/modules/xPendingReboot_0.4.zip"
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "C:\\cfn\\Modules\\xActiveDirectory_3.0.zip": {
                                "source": {
                                    "Fn::Sub": "https://${DSS3BucketName}.s3.${DSS3BucketRegion}.amazonaws.com/${DSS3KeyPrefix}/modules/xActiveDirectory_3.0.zip"
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "C:\\cfn\\Modules\\xDnsServer_1.15.zip": {
                                "source": {
                                    "Fn::Sub": "https://${DSS3BucketName}.s3.${DSS3BucketRegion}.amazonaws.com/${DSS3KeyPrefix}/modules/xDnsServer_1.15.zip"
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "C:\\cfn\\Modules\\SqlServerDsc_13.2.zip": {
                                "source": {
                                    "Fn::Sub": "https://${DSS3BucketName}.s3.${DSS3BucketRegion}.amazonaws.com/${DSS3KeyPrefix}/modules/SqlServerDsc_13.2.zip"
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "C:\\cfn\\Modules\\SqlServer_21.0.17279.zip": {
                                "source": {
                                    "Fn::Sub": "https://${DSS3BucketName}.s3.${DSS3BucketRegion}.amazonaws.com/${DSS3KeyPrefix}/modules/SqlServer_21.0.17279.zip"
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "C:\\cfn\\Modules\\xWindowsUpdate-2.8.zip": {
                                "source" : {
                                    "Fn::Sub": "https://${DSS3BucketName}.s3.${DSS3BucketRegion}.amazonaws.com/${DSS3KeyPrefix}/modules/xWindowsUpdate-2.8.zip"
                                },
                                "authentication": "S3AccessCreds"
                            }
                        },
                        "services": {
                            "windows": {
                                "cfn-hup": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": [
                                        "c:\\cfn\\cfn-hup.conf",
                                        "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        },
                        "commands": {
                            "a-set-execution-policy": {
                                "command": "powershell.exe -command Set-ExecutionPolicy RemoteSigned -Force",
                                "waitAfterCompletion": "0"
                            },
                            "b-unpack-quickstart-module": {
                                "command": "powershell.exe -command c:\\cfn\\scripts\\Unzip-Archive.ps1 -Source c:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\",
                                "waitAfterCompletion": "0"
                            },
                            "c-create-waithandle": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -command \"c:\\cfn\\scripts\\CreateWaitHandle.ps1 -Handle '",
                                            {
                                                "Ref": "PIAF1WaitHandle"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "d-unzip-modules": {
                                "command": "powershell.exe -command \"Get-ChildItem 'C:\\cfn\\Modules' *.zip | Foreach-Object { c:\\cfn\\scripts\\unzip-archive.ps1 -source $_.fullname -destination 'C:\\Program Files\\WindowsPowerShell\\Modules'}\"",
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "pisoftware": {
                        "files": {
                            "c:\\media\\PIAF\\UpdateAFServersUser.sql": {
                                "source": {
                                    "Fn::Sub": "https://${DSS3BucketName}.s3.${DSS3BucketRegion}.amazonaws.com/${DSS3KeyPrefix}/scripts/PIAF/UpdateAFServersUser.sql"
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "c:\\media\\PIServer\\PIServerInstaller.exe": {
                                "source": {
                                    "Fn::Sub": "https://${SetupKitsS3BucketName}.s3.${SetupKitsS3BucketRegion}.amazonaws.com/${SetupKitsS3KeyPrefix}/PIServer/${SetupKitsS3PIFileName}"
                                },
                                "authentication": "S3AccessCreds"
                            },
                            "C:\\media\\NETFramework\\windows10.0-kb4486129.msu": {
                                "source" : "http://download.windowsupdate.com/c/msdownload/update/software/ftpk/2019/08/windows10.0-kb4486129-x64_bb869dd2cfa4ddde433373e2c72d15e660c2fc8d.msu"
                            }
                        }
                    },
                    "rename": {
                        "commands": {
                            "a-rename-computer": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command Rename-Computer -Restart -NewName '",
                                            {
                                                "Ref": "PIAF1NetBIOSName"
                                            },
                                            "'"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "b-domain-join": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -executionpolicy remotesigned -Command c:\\cfn\\scripts\\Join-Domain.ps1 -DomainName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -UserName '",
                                            {
                                                "Ref": "DomainAdminUserName"
                                            },
                                            "' -NamePrefix '",
                                            {
                                                "Ref" : "NamePrefix"
                                            },
                                            "'"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            }
                        }
                    },
                    "addloadbalancerdns": {
                        "a-install-dns-tools": {
                            "command": "powershell.exe -command Install-WindowsFeature -Name 'RSAT-DNS-Server'",
                            "waitAfterCompletion": "0"
                        },
                        "b-add-loadbalancer-dns": {
                            "command": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "powershell.exe -command Add-DnsServerResourceRecordCName -Name '",
                                        {
                                            "Ref": "AFLoadBalancedName"
                                        },
                                        "' -HostNameAlias '",
                                        {
                                            "Fn::GetAtt": [
                                                "ELB0",
                                                "DNSName"
                                            ]
                                        },
                                        "' -ZoneName '",
                                        {
                                            "Ref": "DomainDNSName"
                                        },
                                        "' -ComputerName '",
                                        {
                                            "Ref": "DomainControllerServerName"
                                        },
                                        "'"
                                    ]
                                ]
                            },
                            "waitAfterCompletion": "0"
                        }
                    },
                    "bootstrapDSC": {
                        "commands": {
                            "a-create-cert": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -command c:\\cfn\\scripts\\New-DSCCertificate.ps1"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "b-suppress-uac-for-db-import": {
                                "command": "REG ADD HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v ConsentPromptBehaviorAdmin /t REG_DWORD /d 0 /f",
                                "waitAfterCompletion": "300"
                            },
                            "c-run-dsc-config-first": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command c:\\cfn\\scripts\\PIAF0.ps1 -DomainNetBiosName '",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "' -DomainDNSName '",
                                            {
                                                "Ref": "DomainDNSName"
                                            },
                                            "' -DomainAdminUserName '",
                                            {
                                                "Ref": "DomainAdminUserName"
                                            },
                                            "' -DefaultPIDataArchive '",
                                            {
                                                "Ref": "PIDataArchive0NetBIOSName"
                                            },
                                            "' -SetupKitsS3PIProductID '",
                                            {
                                                "Ref": "SetupKitsS3PIProductID"
                                            },
                                            "' -AFLoadBalancedName '",
                                            {
                                                "Ref": "AFLoadBalancedName"
                                            },
                                            "' -DefaultSqlServer '",
                                            {
                                                "Ref": "SQLNode0NetBIOSName"
                                            },
                                            "' -PIAFServiceAccountName '",
                                            {
                                                "Ref": "PIAFServiceAccountName"
                                            },
                                            "' -PrimaryDomainController '",
                                            {
                                                "Ref": "DomainControllerServerName"
                                            },
                                            "' -ElasticLoadBalancerDnsRecord '",
                                            {
                                                "Fn::GetAtt": [
                                                    "ELB0",
                                                    "DNSName"
                                                ]
                                            },
                                            "' -NamePrefix '",
                                            {
                                                "Ref" : "NamePrefix"
                                            },
                                            "'"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "forever"
                            },
                            "d-restore-uac--db-import": {
                                "command": "REG ADD HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v ConsentPromptBehaviorAdmin /t REG_DWORD /d 5 /f",
                                "waitAfterCompletion": "0"
                            }
                        }
                    },
                    "finalize": {
                        "commands": {
                            "a-write-status": {
                                "command": "powershell.exe -command Write-AWSQuickStartStatus",
                                "waitAfterCompletion": "0"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "IamInstanceProfile": {
                    "Ref": "EC2RoleInstanceProfile"
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "ImageId": {
                    "Ref": "LatestWindowsAmiId"
                },
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "<script>\n",
                                "cfn-init.exe -v -c config -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r EC21",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "</script>\n"
                            ]
                        ]
                    }
                },
                "NetworkInterfaces": [
                    {
                        "GroupSet"    : [
                            {
                                "Ref" : "DomainMemberSGID"
                            },
                            {
                                "Ref" : "PISystemsSGID"
                            },
                            {
                                "Ref" : "SQLClientSGID"
                            }
                        ],
                        "DeviceIndex": "0",
                        "DeleteOnTermination": "true",
                        "SubnetId"            : {
							"Ref" : "BackendSubnet1ID"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${NamePrefix}-${PIAF1NetBIOSName}"
                        }
                    }
                ]
            }
        },
        "EC21VA0Binaries": {
            "Type": "AWS::EC2::VolumeAttachment",
            "Condition": "CreateHAResources",
            "Properties": {
                "VolumeId": {
                    "Ref": "EC21VolumeData0Binaries"
                },
                "InstanceId": {
                    "Ref": "EC21"
                },
                "Device": "xvdf"
            }
        },
        "EC21VolumeData0Binaries": {
            "Type": "AWS::EC2::Volume",
            "Condition": "CreateHAResources",
            "Metadata": {
                "Comment": "Data disk to separate program binaries."
            },
            "Properties": {
                "AvailabilityZone": {
                    "Fn::GetAtt": [
                        "EC21",
                        "AvailabilityZone"
                    ]
                },
                "Size": 32,
                "VolumeType": "gp2",
                "Encrypted": true,
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${NamePrefix}-${PIAF1NetBIOSName}-binaries-ebs"
                        }
                    }
                ]
            }
        },
        "PIAF1WaitCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "Condition": "CreateHAResources",
            "DependsOn": "EC21",
            "Properties": {
                "Handle": {
                    "Ref": "PIAF1WaitHandle"
                },
                "Count": "2",
                "Timeout": "5400"
            }
        },
        "PIAF1WaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle",
            "Condition": "CreateHAResources"
        },
        "ELB0": {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Condition": "CreateHAResources",
            "Properties": {
                "Name": {
                    "Ref": "PIAFElasticLoadBalancerName"
                },
                "Type": "network",
                "IpAddressType": "ipv4",
                "Scheme": "internal",
                "Subnets": [
                    {
						"Ref" : "BackendSubnet0ID"
                    },
                    {
						"Ref" : "BackendSubnet1ID"
                    }
                ]
            }
        },
        "ELBTargetGroup0": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Condition": "CreateHAResources",
            "DependsOn": [
                "ELB0",
                "EC20",
                "EC21"
            ],
            "Description": "Configures the backendpool of EC2 target machines.",
            "Properties": {
                "Name": {
                    "Fn::Sub": "${PIAFElasticLoadBalancerName}-TCP5457"
                },
                "VpcId": {
						"Ref" : "VPCID"
                },
                "Port": "5457",
                "Protocol": "TCP",
                "TargetType": "instance",
                "Targets": [
                    {
                        "Id": {
                            "Ref": "EC20"
                        },
                        "Port": "5457"
                    },
                    {
                        "Id": {
                            "Ref": "EC21"
                        },
                        "Port": "5457"
                    }
                ],
                "HealthCheckIntervalSeconds": 10,
                "HealthCheckPort": "5457",
                "HealthCheckProtocol": "TCP",
                "HealthyThresholdCount": 2,
                "UnhealthyThresholdCount": 2
            }
        },
        "EBLListener0": {
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
            "DependsOn": "ELB0",
            "Condition": "CreateHAResources",
            "Properties": {
                "DefaultActions": [
                    {
                        "TargetGroupArn": {
                            "Ref": "ELBTargetGroup0"
                        },
                        "Type": "forward"
                    }
                ],
                "LoadBalancerArn": {
                    "Ref": "ELB0"
                },
                "Port": "5457",
                "Protocol": "TCP"
            }
        },
        "ELBTargetGroup1": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "DependsOn": [
                "ELB0",
                "EC20",
                "EC21"
            ],
            "Condition": "CreateHAResources",
            "Description": "Confiures the backendpool of EC2 target machines.",
            "Properties": {
                "Name": {
                    "Fn::Sub": "${PIAFElasticLoadBalancerName}-TCP5459"
                },
                "VpcId": {
						"Ref" : "VPCID"
                },
                "Port": "5459",
                "Protocol": "TCP",
                "TargetType": "instance",
                "Targets": [
                    {
                        "Id": {
                            "Ref": "EC20"
                        },
                        "Port": "5459"
                    },
                    {
                        "Id": {
                            "Ref": "EC21"
                        },
                        "Port": "5459"
                    }
                ],
                "HealthCheckIntervalSeconds": 10,
                "HealthCheckPort": "5459",
                "HealthCheckProtocol": "TCP",
                "HealthyThresholdCount": 2,
                "UnhealthyThresholdCount": 2
            }
        },
        "EBLListener1": {
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
            "Condition": "CreateHAResources",
            "Properties": {
                "DefaultActions": [
                    {
                        "TargetGroupArn": {
                            "Ref": "ELBTargetGroup1"
                        },
                        "Type": "forward"
                    }
                ],
                "LoadBalancerArn": {
                    "Ref": "ELB0"
                },
                "Port": "5459",
                "Protocol": "TCP"
            }
        }
    },
    "Outputs": {
        "EC20ID": {
            "Description": "Primary AF Server ID",
            "Value": {
                "Ref": "EC20"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-EC20ID"
                }
            }
        },
        "EC21ID": {
            "Description": "Secondary AF Server ID",
            "Condition": "CreateHAResources",
            "Value": {
                "Ref": "EC21"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-EC21ID"
                }
            }
        }
    }
}
